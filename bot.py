import os
import json
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∏–ª–∏ –º–æ–∂–Ω–æ –Ω–∞–ø—Ä—è–º—É—é –ø—Ä–æ–ø–∏—Å–∞—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∞)
BOT_TOKEN = os.getenv("BOT_TOKEN", "–í–°–¢–ê–í–¨_–°–í–û–ô_–¢–û–ö–ï–ù_–û–¢–°–Æ–î–ê")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –∞—Ä–æ–º–∞—Ç–æ–≤
with open("perfumes.json", "r", encoding="utf-8") as f:
    perfumes = json.load(f)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∞—Ä–æ–º–∞—Ç üíê\n–ù–∞–ø–∏—à–∏, –∫–∞–∫–æ–π –∑–∞–ø–∞—Ö —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: —Å–≤–µ–∂–∏–π, —Å–ª–∞–¥–∫–∏–π, –¥—Ä–µ–≤–µ—Å–Ω—ã–π).")

# –ü–æ–∏—Å–∫ –∞—Ä–æ–º–∞—Ç–æ–≤
def find_perfumes(query):
    query = query.lower()
    results = []
    for perfume in perfumes:
        if any(note in query for note in perfume["notes"]) or perfume["category"] in query:
            results.append(perfume)
    return results[:3]  # –º–∞–∫—Å–∏–º—É–º 3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    results = find_perfumes(text)
    if results:
        for perfume in results:
            caption = f"{perfume['name']} ({perfume['brand']})\n–ù–æ—Ç—ã: {', '.join(perfume['notes'])}\n–°–µ–∑–æ–Ω: {perfume['season']} | –ü–æ–ª: {perfume['gender']}"
            await update.message.reply_photo(photo=perfume["image"], caption=caption)
    else:
        await update.message.reply_text("–ù–µ –Ω–∞—à—ë–ª –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞—Ä–æ–º–∞—Ç üôà –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–∏–µ —Å–ª–æ–≤–∞: —Å–≤–µ–∂–∏–π, —Å–ª–∞–¥–∫–∏–π, –¥—Ä–µ–≤–µ—Å–Ω—ã–π, –≤–æ—Å—Ç–æ—á–Ω—ã–π...")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
